
def replace[
  T : Type, a : T, b : T
](
  prf : a === b, P : (T) -> Type, p : P(a)
) : P(b) => p

def equal_map[
  T : Type, U : Type, a : T, b : T
](
  p : a === b, f : (T) -> U
) : f(a) === f(b) => replace(p, (x) => f(a) === f(x), Refl)

def equal_sym[T : Type, a : T, b : T](equal: a === b) : b === a 
  => replace(equal, (x) => x === a, Refl)

def equal_trans[
  T : Type, a : T, b : T, c : T
](
  a_eq_b : a === b, b_eq_c : b === c
) : a === c => replace(b_eq_c, (x) => a === x, a_eq_b)